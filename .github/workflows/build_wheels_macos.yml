name: Build MacOS wheels

on:
  push:
    branches:
      - main # just build the sdist & wheel, skip release
    tags:
      - "*"
  pull_request: # also build on PRs touching this file
    paths:
      - ".github/workflows/build_wheels_macos.yml"
      - "ci/*"
      - "MANIFEST.in"
      - "pyproject.toml"
      - "setup.py"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        platform: ["x86_64"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache vcpkg
        uses: actions/cache@v1
        id: vcpkgcache
        with:
          path: "/Users/runner/.cache/vcpkg/archives"
          key: ${{ runner.os }}-${{ matrix.platform }}-vcpkg-gdal3.4.1

      # MacOS build requires aclocal, which is part of automake, but appears
      # to be missing in default image
      - name: Reinstall automake
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew reinstall automake
          echo $(which aclocal)

      - name: Install GDAL
        run: |
          vcpkg install gdal[core]
          echo "contents of /usr/local/share/vcpkg/packages/gdal_x64-osx/include"
          ls /usr/local/share/vcpkg/packages/gdal_x64-osx/include
          echo "contents of /usr/local/share/vcpkg/packages/gdal_x64-osx/lib"
          ls /usr/local/share/vcpkg/packages/gdal_x64-osx/lib

      - name: Upload build logs
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          path: /usr/local/share/vcpkg/buildtrees/gdal/*.log

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          PYOGRIO_PACKAGE_DATA: 1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  test-wheel:
    name: Test wheels on ${{ matrix.os }} ${{ matrix.platform }}
    needs: build_wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        platform: ["x86_64"]
        #python-version: ["3.8", "3.9", "3.10"]
        python-version: ["3.9"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels from artifacts
        uses: actions/download-artifact@v2
        with:
          path: wheelhouse

      - name: Get wheel name
        shell: bash
        run: echo "wheel_name=$(ls wheelhouse/artifact | grep whl)" >> $GITHUB_ENV

      - shell: bash
        run: |
          python -m pip install delocate
          delocate-listdeps -a -d wheelhouse/artifact/${{ env.wheel_name }}
  #     - name: Set version string
  #       shell: bash
  #       run: echo "py_version_str=cp$(echo ${{ matrix.python-version }} | tr -d -c 0-9)" >> $GITHUB_ENV

  #     - name: Install package from wheel
  #       shell: bash
  #       run: |
  #         ls -R wheelhouse
  #         python -m pip install --upgrade pip
  #         python -m pip install wheelhouse/artifact/pyogrio-*${{ env.py_version_str }}*.whl
  #     - name: Run tests
  #       run: |
  #         python -m pip install pytest pandas pyproj shapely packaging
  #         python -m pip install --no-deps geopandas
  #         python -m pip list
  #         cd ..
  #         python -m pytest --pyargs pyogrio
