name: Build Linux wheels

on:
  push:
    branches:
      - main # just build the sdist & wheel, skip release
    tags:
      - "*"
  pull_request: # also build on PRs touching this file
    paths:
      - ".github/workflows/build_wheels_linux.yml"
      - "ci/*"
      - "MANIFEST.in"
      - "pyproject.toml"
      - "setup.py"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        platform: ["x86_64"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx

      # - name: Build Docker image with vcpkg and gdal
      #   run: |
      #     docker build -t manylinux-vcpkg-gdal -f ci/manylinux2014_x86_64-vcpkg-gdal.Dockerfile .

      - name: Build Docker image with vcpkg and gdal
        # using build-push-action (without push) to make use of cache directory arguments
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ci/manylinux2014_x86_64-vcpkg-gdal.Dockerfile
          push: false
          tags: manylinux-vcpkg-gdal:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      -
        # Temp fix (https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#local-cache)
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  # test-wheel:
  #   name: Test wheels on ${{ matrix.os }} ${{ matrix.platform }}
  #   needs: build_wheels
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: ["ubuntu-20.04", "macos-latest"]
  #       platform: ["x86_64"]
  #       python-version: ["3.8", "3.9", "3.10"]

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: false

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Download wheels from artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: wheelhouse

  #     - name: Set version string
  #       shell: bash
  #       run: echo "py_version_str=cp$(echo ${{ matrix.python-version }} | tr -d -c 0-9)" >> $GITHUB_ENV

  #     - name: Install package from wheel
  #       shell: bash
  #       run: |
  #         ls -R wheelhouse
  #         python -m pip install --upgrade pip
  #         python -m pip install wheelhouse/artifact/pyogrio-*${{ env.py_version_str }}*.whl
  #     - name: Run tests
  #       run: |
  #         python -m pip install pytest pandas pyproj shapely packaging
  #         python -m pip install --no-deps geopandas
  #         python -m pip list
  #         cd ..
  #         python -m pytest --pyargs pyogrio
