name: Build Linux wheels

on:
  push:
    branches:
      - main # just build the sdist & wheel, skip release
    tags:
      - "*"
  pull_request: # also build on PRs touching this file
    paths:
      - ".github/workflows/build_wheels_linux.yml"
      - "ci/*"
      - "MANIFEST.in"
      - "pyproject.toml"
      - "setup.py"
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        platform: ["x86_64"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Build Docker image with vcpkg and gdal
        # using build-push-action (without push) to make use of cache arguments
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ci/manylinux2014_x86_64-vcpkg-gdal.Dockerfile
          tags: manylinux-vcpkg-gdal:latest
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  test-wheel:
    name: Test wheels on ${{ matrix.os }} ${{ matrix.platform }}
    needs: build_wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        platform: ["x86_64"]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download wheels from artifacts
        uses: actions/download-artifact@v2
        with:
          path: wheelhouse

      - name: Set version string
        shell: bash
        run: echo "py_version_str=cp$(echo ${{ matrix.python-version }} | tr -d -c 0-9)" >> $GITHUB_ENV

      - name: Install dependencies and pyogrio wheel
        shell: bash
        run: |
          python -m pip install -r ci/requirements-wheel-test.txt
          python -m pip install --no-deps geopandas
          python -m pip install wheelhouse/artifact/pyogrio-*${{ env.py_version_str }}*.whl
          python -m pip list

      - name: Run tests
        shell: bash
        # TODO temporary set env variable for curl certificate
        env:
          CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
        run: |
          cd ..
          python -m pytest --pyargs pyogrio.tests -v
